name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Debug Secrets
        run: |
          if [ -n "${{ secrets.GOOGLE_BOOKS_API_KEY }}" ]; then
            echo "API key is available"
            echo "Length of API key: ${#GOOGLE_BOOKS_API_KEY}"
          else
            echo "API key is NOT available"
          fi

      - name: Create config file
        run: |
          echo "Creating config.js..."
          echo "window.CONFIG = { GOOGLE_BOOKS_API_KEY: '${{ secrets.GOOGLE_BOOKS_API_KEY }}' };" > config.js
          echo "Config.js created with size:"
          ls -l config.js
          echo "Config.js contents (masked):"
          cat config.js | sed 's/GOOGLE_BOOKS_API_KEY: .*/GOOGLE_BOOKS_API_KEY: ***MASKED***/g'

      - name: Setup deployment
        run: |
          mkdir -p _site
          cp -r * _site/ || true
          echo "Contents of _site directory:"
          ls -la _site/
          echo "Verifying config.js in _site:"
          cat _site/config.js | sed 's/GOOGLE_BOOKS_API_KEY: .*/GOOGLE_BOOKS_API_KEY: ***MASKED***/g'

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: _site
          force_orphan: true

      - name: Verify deployment
        run: |
          echo "Waiting for deployment..."
          sleep 30
          echo "Checking gh-pages branch..."
          git fetch origin gh-pages
          git checkout gh-pages
          echo "Contents of gh-pages branch:"
          ls -la
          echo "Checking config.js:"
          if [ -f "config.js" ]; then
            echo "config.js exists"
            cat config.js | sed 's/GOOGLE_BOOKS_API_KEY: .*/GOOGLE_BOOKS_API_KEY: ***MASKED***/g'
          else
            echo "config.js not found!"
          fi
